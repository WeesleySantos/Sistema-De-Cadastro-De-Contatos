@using ControleContatos.Enums;
@model ControleContatos.Models.AlterarSenhaViewModel
@{
    ViewData["Title"] = "Alterar senha do usuário";
}
<div class="text-center">
    <h1 class="display-4 mt-3">Alterar senha do usuário</h1>
</div>
<div class="mt-3">
    @if (TempData["MensagemSucesso"] != null)
    {
        <div class="alert alert-success" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Colse">X</button>
            @TempData["MensagemSucesso"]
        </div>
    }
    @if (TempData["MensagemErro"] != null)
    {
        <div class="alert alert-danger" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Colse">X</button>
            @TempData["MensagemErro"]
        </div>
    }
</div>
<form asp-controller="AlterarSenha" asp-action="Alterar" method="post">
    <div class="form-group">
        <label for="senhaAtual">Senha Atual</label>
        <input asp-for="@Model.SenhaAtual" type="password" class="form-control" placeholder="Digite a senha atual do usuário">
        @Html.ValidationMessageFor(x => x.SenhaAtual)
    </div>
    <div class="form-group">
        <label for="novaSenha">Nova Senha</label>
        <input asp-for="@Model.NovaSenha" type="password" class="form-control" placeholder="Digite a nova senha do usuário">
        @Html.ValidationMessageFor(x => x.NovaSenha)
    </div>
    <div class="form-group">
        <label for="confirmarSenha">Confirmar nova Senha</label>
        <input asp-for="@Model.ConfirmarNovaSenha" type="password" class="form-control" placeholder="Digite a confirmação da nova senha do usuário">
        @Html.ValidationMessageFor(x => x.ConfirmarNovaSenha)
    </div>
    <button type="submit" class="btn btn-primary btn-block">Alterar</button>
    <a class="btn btn-secondary btn-block" asp-controller="Home" asp-action="Index">Voltar</a>
</form>